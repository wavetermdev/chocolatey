name: Choco Auto Update

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  update_choco_auto:
    name: update_${{ matrix.package }}
    runs-on: windows-latest

    strategy:
      max-parallel: 1
      matrix:
        package: [
          wave
        ]

    steps:
      - name: Get App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
            app-id: ${{ vars.WAVE_BUILDER_APPID }}
            private-key: ${{ secrets.WAVE_BUILDER_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Chocolatey Automatic Package Updater Module
        run: Install-Module -Name Chocolatey-AU -Force

      - name: Run ${{ matrix.package }} update script
        id: update
        run: |
          cd ${{ matrix.package }}
          $UpdateOutput = .\update.ps1
          $NupkgPath = (($UpdateOutput.Result | Where-Object {$_ -like '*.nupkg''*'}) -split "'")[1]
          Write-Output "NupkgPath=$($NupkgPath)" >> $Env:GITHUB_OUTPUT
          $UpdateStatus = if ($UpdateOutput.Result -match 'No new version found') {'No Update'} else {'Update Available'}
          Write-Output "UpdateStatus=$($UpdateStatus)" >> $Env:GITHUB_OUTPUT

      - name: Test ${{ matrix.package }} install
        run: Test-Package -Install -Nu ${{ steps.update.outputs.NupkgPath }}
        if: steps.update.outputs.UpdateStatus == 'Update Available'

      - name: Publish to Chocolatey community feed
        run: |
          $Nupkg = '${{ steps.update.outputs.NupkgPath }}'
          $ApiKey = '${{ secrets.CHOCOLATEY_API_KEY }}'
          $ChocoServer = 'https://push.chocolatey.org/'
          choco push $Nupkg --source $ChocoServer --key $ApiKey
        if: steps.update.outputs.UpdateStatus == 'Update Available'

      - name: Commit Updated nuspec
        run: |
          $HEAD = $(git rev-parse HEAD)
          $NUSPEC_B64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes([System.IO.File]::ReadAllText('wave\wave.nuspec')))
          $CHOCLATEY_B64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes([System.IO.File]::ReadAllText('wave\chocolateyinstall.ps1')))
          gh api graphql -f query='
          mutation createCommit {
            createCommitOnBranch(input: {branch: {repositoryNameWithOwner: "wavetermdev/chocolatey", branchName: "main"}, message: {headline: "Update hello.txt"}, fileChanges: {additions: [{path: "wave/wave.nuspec", contents: "$($NUSPEC_B64)"},{path: "wave/tools/chocolateyinstall.ps1", contents:"$($CHOCOLATEY_B64)"}]}, expectedHeadOid: "$($HEAD)"}) {
              commit {
                url
              }
            }
          }' 
        shell: pwsh
